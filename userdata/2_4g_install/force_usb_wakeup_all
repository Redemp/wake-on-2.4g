#!/bin/bash
# Enables wakeup or tries to force it for *all* USB devices
# Recursively enables wakeup on parent devices (e.g., hubs)

echo "[USB Wakeup] Forcing USB wakeup on all connected devices..."

# Function to recursively enable wakeup on all USB parents
enable_parent_wakeup_chain() {
    local device_path="$1"

    while true; do
        parent_path=$(readlink -f "$device_path/..")
        [[ "$parent_path" == "$device_path" ]] && break  # Reached root or circular link
        device_path="$parent_path"

        # Skip if path isn't a USB device
        [[ ! "$device_path" =~ /usb[0-9]+$ && ! "$device_path" =~ /[0-9-]+$ ]] && continue

        if [ -f "$device_path/power/wakeup" ]; then
            echo enabled > "$device_path/power/wakeup"
            echo "[USB Wakeup] Wakeup enabled on parent: $(basename "$device_path")"
        fi
    done
}

for DEVICE_PATH in /sys/bus/usb/devices/*; do
    [ -e "$DEVICE_PATH/idVendor" ] || continue  # Only real USB devices

    DEVNAME=$(basename "$DEVICE_PATH")
    echo "[USB Wakeup] Processing $DEVNAME..."

    if [ -f "$DEVICE_PATH/power/wakeup" ]; then
        echo enabled > "$DEVICE_PATH/power/wakeup"
        echo "[USB Wakeup] Wakeup enabled for $DEVNAME"
    else
        echo "[USB Wakeup] Wakeup not supported on $DEVNAME, trying fallback..."

        # Attempt to force autosuspend behavior
        if [ -f "$DEVICE_PATH/power/control" ]; then
            echo auto > "$DEVICE_PATH/power/control"
        fi

        # Recursively enable wakeup on all parent devices
        enable_parent_wakeup_chain "$DEVICE_PATH"
    fi
done

echo "[USB Wakeup] Done."
